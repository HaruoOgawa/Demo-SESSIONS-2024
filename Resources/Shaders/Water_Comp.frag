#version 450
layout(location=0) in vec4 v2f_ObjectPos;layout(location=1) in vec2 v2f_UV;layout(location=0) out vec4 gPosition;layout(location=1) out vec4 gNormal;layout(location=2) out vec4 gAlbedo;layout(location=3) out vec4 gDepth;layout(location=4) out vec4 gParam_1;
layout(binding = 1) uniform FragUniformBufferObject{mat4 invModel;mat4 model;mat4 view;mat4 proj;vec4 cameraPos;vec4 mainColor;vec4 param0;vec4 param1;vec2 resolution;float time;float deltaTime;float zLength;float baseHeight;float WaterWidth;float WaterHeight;float LightParam;float useZAnim;float fPad1;float fPad2;} fragUbo;
#define repeat(p,a)mod(p,a)-a*0.5
#define rot(a)mat2(cos(a),sin(a),-sin(a),cos(a))
#define pi acos(-1.0)
#define pi2 pi*2.0
struct MatInfo{float d;float MatID;float metallic;float roughness;};MatInfo t(MatInfo o,float v){if(v<o.d)o.d=v,o.MatID=2.,o.metallic=.9,o.roughness=1.;return o;}vec2 t(vec2 v){v=vec2(dot(v,vec2(127.1,311.7)),dot(v,vec2(269.5,183.3)));return-1.+2.*fract(sin(v)*43758.5453123);}float v(vec2 v){vec2 o=floor(v+(v.x+v.y)*.366025404),d=v-o+(o.x+o.y)*.211324865;float a=step(d.y,d.x);vec2 n=vec2(a,1.-a),f=d-n+.211324865,l=d-1.+.42264973;vec3 g=max(.5-vec3(dot(d,d),dot(f,f),dot(l,l)),0.);return dot(g*g*g*g*vec3(dot(d,t(o)),dot(f,t(o+n)),dot(l,t(o+1.))),vec3(70));}MatInfo f(vec3 o){MatInfo d;d.d=1e5;d.MatID=-1;d.metallic=0.;d.roughness=0.;vec2 n=o.xz;if(floor(fragUbo.useZAnim)==1.)n.y+=fragUbo.time;float a=o.y-fragUbo.baseHeight-v(n*fragUbo.WaterWidth)*fragUbo.WaterHeight;return t(d,a);}vec3 d(vec3 v){vec2 o=vec2(.001,0);return normalize(vec3(f(v+o.xyy).d-f(v-o.xyy).d,f(v+o.yxy).d-f(v-o.yxy).d,f(v+o.yyx).d-f(v-o.yyx).d));}float n(vec3 v){vec4 o=fragUbo.proj*fragUbo.view*vec4(v,1);float d=o.z/o.w*.5+.5,n=d*d,f=dFdx(d);d=dFdy(d);return n+.25*(f*f+d*d);}void main(){vec3 v=vec3(0);vec2 o=v2f_UV*2.-1.;o.x*=fragUbo.resolution.x/fragUbo.resolution.y;vec3 a=(fragUbo.invModel*fragUbo.cameraPos).xyz,g=normalize(v2f_ObjectPos.xyz-a);a+=fragUbo.cameraPos.xyz;float l=0.;vec3 r=a+g*l;MatInfo s;s.d=1e5;s.MatID=-1;s.metallic=0.;s.roughness=0.;for(int v=0;v<256;v++){s=f(r);l+=s.d;r=a+g*l;if(abs(s.d)<.001)break;}if(s.d<.001){vec3 o=d(r);float a=n(r);v=fragUbo.mainColor.xyz;gPosition=vec4(r,1);gNormal=vec4(o,1);gAlbedo=vec4(v,1);gDepth=vec4(vec3(a),1);gParam_1=vec4(s.MatID,fragUbo.LightParam,s.metallic,s.roughness);gl_FragDepth=a;}else discard;}