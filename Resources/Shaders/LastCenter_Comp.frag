#version 450
layout(location=0) in vec4 v2f_ObjectPos;layout(location=1) in vec2 v2f_UV;layout(location=0) out vec4 gPosition;layout(location=1) out vec4 gNormal;layout(location=2) out vec4 gAlbedo;layout(location=3) out vec4 gDepth;layout(location=4) out vec4 gParam_1;
layout(binding = 1) uniform FragUniformBufferObject{mat4 invModel;mat4 model;mat4 view;mat4 proj;vec4 cameraPos;vec4 mainColor;vec4 objPos;vec4 param1;vec2 resolution;float time;float deltaTime;float zLength;float tparam;float LightParam;float rate;float fPad1;float fPad2;} fragUbo;
#define repeat(p,a)mod(p,a)-a*0.5
#define rot(a)mat2(cos(a),sin(a),-sin(a),cos(a))
#define pi acos(-1.0)
#define pi2 pi*2.0
struct MatInfo{float d;float MatID;float metallic;float roughness;vec4 albedo;};MatInfo t(MatInfo o,float v){vec4 n=vec4(1);if(v<o.d)o.d=v,o.MatID=2.,o.metallic=1.,o.roughness=0.,o.albedo=n;return o;}MatInfo t(){MatInfo o;o.d=1e5;o.MatID=-1.;o.metallic=0.;o.roughness=0.;o.albedo=vec4(1);return o;}MatInfo t(vec3 o){o.y+=1.;o+=fragUbo.objPos.xyz;float v=length(o)-.5;return t(t(),v);}vec3 v(vec3 v){vec2 o=vec2(.001,0);return normalize(vec3(t(v+o.xyy).d-t(v-o.xyy).d,t(v+o.yxy).d-t(v-o.yxy).d,t(v+o.yyx).d-t(v-o.yyx).d));}float f(vec3 v){vec4 o=fragUbo.proj*fragUbo.view*vec4(v,1);float f=o.z/o.w*.5+.5,n=f*f,a=dFdx(f);f=dFdy(f);return n+.25*(a*a+f*f);}void main(){vec2 o=v2f_UV*2.-1.;o.x*=fragUbo.resolution.x/fragUbo.resolution.y;vec3 n=(fragUbo.invModel*fragUbo.cameraPos).xyz,a=normalize(v2f_ObjectPos.xyz-n);n+=fragUbo.cameraPos.xyz;float g=0.;vec3 l=n+a*g;MatInfo d=t();for(int o=0;o<64;o++){d=t(l);g+=d.d*.5;l=n+a*g;if(abs(d.d)<.001)break;}if(d.d<.001){vec3 o=v(l);float n=f(l);gPosition=vec4(l,1);gNormal=vec4(o,1);gAlbedo=d.albedo;gDepth=vec4(vec3(n),1);gParam_1=vec4(d.MatID,0,d.metallic,d.roughness);gl_FragDepth=n;}else discard;}